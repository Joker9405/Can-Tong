let mediaRecorder,chunks=[],isRecording=false;const els={input:document.getElementById('inputText'),output:document.getElementById('outputText'),btnMic:document.getElementById('btnMic'),btnStop:document.getElementById('btnStop'),btnTranslate:document.getElementById('btnTranslate'),btnSpeak:document.getElementById('btnSpeak'),asrState:document.getElementById('asrState'),mtState:document.getElementById('mtState'),ttsState:document.getElementById('ttsState'),audio:document.getElementById('audio'),sourceLang:document.getElementById('sourceLang'),targetLang:document.getElementById('targetLang')};async function postASR(e){const t=new FormData;t.append('file',e,'audio.webm');const a=await fetch('/api/asr',{method:'POST',body:t});if(!a.ok)throw new Error('ASR 请求失败');const n=await a.json();return n.text||''}async function postMT(e){const t={text:e,source_lang:els.sourceLang.value,target_lang:els.targetLang.value},a=await fetch('/api/translate',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(t)});if(!a.ok)throw new Error('MT 请求失败');const n=await a.json();return n.text||''}async function postTTS(e){const t=await fetch('/api/tts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text:e,lang:'yue_Hant'})});if(!t.ok)throw new Error('TTS 请求失败');const a=await t.arrayBuffer(),o=new Blob([a],{type:'audio/mpeg'});els.audio.src=URL.createObjectURL(o),els.audio.play()}async function startRec(){const e=await navigator.mediaDevices.getUserMedia({audio:!0});chunks=[],(mediaRecorder=new MediaRecorder(e)).ondataavailable=t=>chunks.push(t.data),mediaRecorder.onstop=async()=>{const e=new Blob(chunks,{type:'audio/webm'});try{els.input.value=await postASR(e)}catch(e){alert(e.message)}};mediaRecorder.start(),isRecording=!0,els.btnMic.disabled=!0,els.btnStop.disabled=!1}function stopRec(){mediaRecorder&&isRecording&&(mediaRecorder.stop(),isRecording=!1,els.btnMic.disabled=!1,els.btnStop.disabled=!0)}els.btnMic.onclick=startRec,els.btnStop.onclick=stopRec,els.btnTranslate.onclick=async()=>{const e=els.input.value.trim();if(!e)return alert('请先输入文本');try{els.output.value=await postMT(e)}catch(e){alert(e.message)}};els.btnSpeak.onclick=async()=>{const e=els.output.value.trim()||els.input.value.trim();if(!e)return alert('没有可播报文本');try{await postTTS(e)}catch(e){alert(e.message)}};